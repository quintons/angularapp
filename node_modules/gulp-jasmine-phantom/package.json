{
  "name": "gulp-jasmine-phantom",
  "version": "1.1.1",
  "description": "Jasmine 2.0 suite runner, optionally with PhantomJS",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/dflynn15/gulp-jasmine-phantom"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "keywords": [
    "gulpplugin",
    "jasmine",
    "phantom",
    "test",
    "testing",
    "unit",
    "integration",
    "framework",
    "runner",
    "tdd",
    "bdd",
    "spec"
  ],
  "dependencies": {
    "gulp-util": "^3.0.0",
    "minijasminenode2": "dflynn15/minijasminenode",
    "through2": "^0.6.1",
    "handlebars": "^2.0.0",
    "require-uncached": "^1.0.2",
    "glob": "^4.0.6"
  },
  "devDependencies": {
    "JSON": "^1.0.0",
    "gulp": "^3.8.7",
    "gulp-jasmine": "^1.0.1",
    "jasmine": "^2.0.1",
    "jasmine-fixture": "^1.0.8"
  },
  "readme": "gulp-jasmine-phantom\n=============\n\nA gulp plugin that runs Jasmine tests with either PhantomJS or minijasminenode2.\n\nDependencies\n------------\n\nBefore you install `gulp-jasmine-phantom` please enusre that you have PhantomJS\ninstalled on your machine. The plugin assumes that the `phantomjs` binary is\navailable in the PATH and executable from the command line.\n\n**If you do not have `phantomjs` installed please install following\n[these directions.](http://phantomjs.org/download.html)\n\nInstall\n-----\n\n```\n$ npm install --save-dev gulp-jasmine-phantom\n```\n\nUsage\n-----\nBy default `gulp-jasmine-phantom` runs your tests with `minijasminenode` and\nnot `phantomjs`.\nThis is in an effort to keep your tasks running as quickly as possible!\n\nBasic useage:\n```javascript\nvar gulp = require('gulp');\nvar jasmine = require('gulp-jasmine-phantom');\n\ngulp.task('default', function () {\n  return gulp.src('spec/test.js')\n          .pipe(jasmine());\n});\n```\nTo use `phantomjs` for tests (ie: integration tests) use the following setup:\n\n```javascript\nvar gulp = require('gulp');\nvar jasmine = require('gulp-jasmine-phantom');\n\ngulp.task('default', function() {\n  return gulp.src('spec/test.js')\n          .pipe(jasmine({\n            integration: true\n          }));\n});\n```\n\nAlso, remember you can always run any multitude of tests using different Gulp\ntasks. For example, running unit tests and integration tests asynchronously.\n\n```javascript\nvar gulp = require('gulp');\nvar jasmine = require('gulp-jasmine-phantom');\n\ngulp.task('unitTests', function () {\n  return gulp.src('spec/test.js')\n          .pipe(jasmine());\n});\n\ngulp.task('integrationTests', function() {\n  return gulp.src('spec/test.js')\n          .pipe(jasmine({\n            integration: true\n          }));\n});\n```\n\nOptions\n-------\n\n#### integration\nType: `boolean` <br />\nDefault: false\n\nRun your tests with `phantomjs`\n\n#### keepRunner\nType: `boolean | string` <br />\nDefault: false\n\nKeep the `specRunner.html` file after build. If given a string, it will keep\nthe runner at the string path.\n\n#### includeStackTrace\nType: `boolean` <br />\nDefault: false\n\nPrints out a longer stack trace for errors.\n\n#### abortOnFail\nType: `boolean`<br />\nDefault: false\n\n**Currently built with integration mode only** <br />\nExits Gulp with an status of 1 that will halt any further Gulp tasks.\n\n#### specHtml\nType: `string` <br />\nDefault: null\n\n**Only use in combination with `integration: true`**\n\nAllows you to specify the Html runner that Jasmine uses **only** during\nintegration tests.\n\n#### vendor\nType: `string|array` <br />\nDefault: null\n\n**Only use in combination with `integration: true`**\n\nThis option allows you to pass in a glob (i.e.: `**/*.js`) that will include\nany vendor files that need to be present for your specs to run (like jQuery for\nexample).\n\nYou can also pass in an array of glob strings (i.e.: `[\"test/*.js\", \"vendor/jquery.js\"]`).\n\nTechnologies Used\n-----------------\n\n* Node\n* Gulp\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dflynn15/gulp-jasmine-phantom/issues"
  },
  "homepage": "https://github.com/dflynn15/gulp-jasmine-phantom",
  "_id": "gulp-jasmine-phantom@1.1.1",
  "dist": {
    "shasum": "ef8a6975e2a627929cb3db8259f2fff59223db27"
  },
  "_from": "gulp-jasmine-phantom@",
  "_resolved": "https://registry.npmjs.org/gulp-jasmine-phantom/-/gulp-jasmine-phantom-1.1.1.tgz"
}

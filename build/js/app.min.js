/**
 * Created by quintonsheppard on 01/02/15.
 */

;(function(angular){
    "use strict";

    /**
     * this contains the required global dependencies for the application
     * @type {string[]}
     */
    var requires = [
        "ui.router",
        "ui.bootstrap",
        "aa.formExtensions",
        "aa.notify"
    ];

    /**
     * Main entry point - Main Controller - would be in a seperate file
     * but, unable at present to have the initialisation code at the top of the concatinated file app.min.js - issue with gulp to be resolved.
     * @param $scope
     * @param $modal
     * @param $log
     * @param dataListSrv
     * @constructor
     */
    function MainCtrl($scope, $modal, $log, dataListSrv) {

        dataListSrv.setItems($scope);

        $scope.additem = function(){
            // TODO: Capture detail from user form
            var detail = {
                name: '',
                description: '',
                price: 0.00,
                quantity: 0,
                isDone: false
            };
            dataListSrv.addItem(detail);
        };
        $scope.delItem = function(index){
            dataListSrv.delItem(index);
        };
        $scope.delAll = function(){
            $scope.itemList = dataListSrv.delAll();
        };
        $scope.setDoneStatus = function(status){
            dataListSrv.setDoneStatus(status);
        };
        $scope.itemsExist = function(){
            return dataListSrv.getItemCount() > 0;
        };

        $scope.openModel = function(){
            $modal.open({
                templateUrl: 'itemDetail.html',
                controller: 'ModalCtrl',
                size: ''
            });
        };

    }
    MainCtrl.$inject = ["$scope", "$modal", "$log", "dataListSrv"];

    angular.module("MyApp", requires).controller('MainCtrl', MainCtrl).config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider){
        $stateProvider.state('main', {
            url: '/',
            views: {
                '': {
                    templateUrl: 'main.html',
                    controller: 'MainCtrl',
                    controllerAs: 'mainCtrl'
                }
            }
        });
        $urlRouterProvider.otherwise("/");
    }]);



}(angular));
/**
 * Created by quintonsheppard on 25/02/15.
 */

;(function(angular){

    'use strict';

    var app = angular.module('MyApp');

    app.controller('ModalCtrl', ["$scope", "$modalInstance", "dataListSrv", function($scope, $modalInstance, dataListSrv){
        $scope.ok = function(form, model){

            if(form.$invalid){
                return;
            }

            dataListSrv.addItem({
                name: model.name,
                description: model.description,
                quantity: model.quantity,
                isDone: (model.isDone ? true : false)
            });

            $modalInstance.close();
        };
        $scope.close = function(){
            $modalInstance.dismiss('cancel');
        };
    }]);

}(angular));
/**
 * Created by quintonsheppard on 25/02/15.
 */

;(function(angular){

    'use strict';

    var app = angular.module('MyApp');

    app.service('dataListSrv', ["$http", function($http){

        /**
         *
         * @param detail
         * @returns {string}
         */
        function getShortDescription(detail) {
            var items_length = detail.description.length;

            var text = '';
            if (items_length < 50 && items_length > 0) {
                text = detail.description.substring(0, 40);
            }
            if (items_length > 50) {
                text += '...';
            }
            return text;
        }

        /**
         *
         * @param detail
         * @returns {*}
         */
        function getLongDescription(detail) {
            return detail.description.length > 0 ? detail.description : '';
        }

        /**
         * DataListService constructor
         * @constructor
         */
        function DataListService(){
            // contains the items, dybamiclly changed,
            //initially filled from request to js/data/data.json from DataListService.setItems()
            this.items = [];
        }

        /**
         *
         * @type {{constructor: DataListService, addItem: Function, delItem: Function, getItems: Function}}
         */
        DataListService.prototype = {
            constructor: DataListService,
            /**
             *
             * @param detail
             */
            addItem: function(detail){
                this.items.push({
                    name: detail.name,
                    shortDescription: getShortDescription(detail),
                    longDescription: getLongDescription(detail),
                    quantity: detail.quantity,
                    isDone: detail.isDone
                });
            },
            /**
             *
             * @param index
             * @returns {*}
             */
            delItem: function(index){
                this.items.splice(index, 1);
            },
            delAll: function($scope){
                this.items = [];
                return this.items;
            },
            /**
             *
             * @param $scope
             */
            setItems: function($scope){

                var self = this; // capturing the context of the object

                // could be taken from the server, however I am using a json file to show the capture of data
                // test if items exist, if so, I have them already!
                // note: the deletion/update will be done on the client - could be done with a server request
                if(this.items.length === 0) {
                    $http.get('js/data/data.json').success(function (data) {
                        self.items = data.items;
                        var newItems = [];

                        for (var i = 0; i < self.items.length; i++) {
                            var detail = self.items[i];
                            newItems.push({
                                name: detail.name,
                                shortDescription: getShortDescription(detail),
                                longDescription: getLongDescription(detail),
                                quantity: detail.quantity,
                                isDone: detail.isDone
                            });
                        }

                        self.items = newItems;
                        $scope.itemList = self.items;
                    });
                }else{
                    $scope.itemList = this.items;
                }

            },
            getItemCount: function(){
                return this.items.length > 0 ? true : false;
            }
        };

        /**
         * returns DataListService instance
         */
        return new DataListService();
    }]);

}(angular));